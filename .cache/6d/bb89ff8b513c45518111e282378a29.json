{"id":"src/main.js","dependencies":[{"name":"C:\\Users\\Santiago\\Desktop\\Diplomado En Desarrollo Front - End Con React JS\\M3U2TrelloAppSantiagoRicardo\\package.json","includedInParent":true,"mtime":1659238152638},{"name":"./utils/all-elements.js","loc":{"line":1,"column":25,"index":25},"parent":"C:\\Users\\Santiago\\Desktop\\Diplomado En Desarrollo Front - End Con React JS\\M3U2TrelloAppSantiagoRicardo\\src\\main.js","resolved":"C:\\Users\\Santiago\\Desktop\\Diplomado En Desarrollo Front - End Con React JS\\M3U2TrelloAppSantiagoRicardo\\src\\utils\\all-elements.js"},{"name":"./api/postTask.js","loc":{"line":2,"column":21,"index":74},"parent":"C:\\Users\\Santiago\\Desktop\\Diplomado En Desarrollo Front - End Con React JS\\M3U2TrelloAppSantiagoRicardo\\src\\main.js","resolved":"C:\\Users\\Santiago\\Desktop\\Diplomado En Desarrollo Front - End Con React JS\\M3U2TrelloAppSantiagoRicardo\\src\\api\\postTask.js"},{"name":"./api/getAllTasks.js","loc":{"line":3,"column":24,"index":120},"parent":"C:\\Users\\Santiago\\Desktop\\Diplomado En Desarrollo Front - End Con React JS\\M3U2TrelloAppSantiagoRicardo\\src\\main.js","resolved":"C:\\Users\\Santiago\\Desktop\\Diplomado En Desarrollo Front - End Con React JS\\M3U2TrelloAppSantiagoRicardo\\src\\api\\getAllTasks.js"},{"name":"./utils/render-tasks.js","loc":{"line":4,"column":24,"index":169},"parent":"C:\\Users\\Santiago\\Desktop\\Diplomado En Desarrollo Front - End Con React JS\\M3U2TrelloAppSantiagoRicardo\\src\\main.js","resolved":"C:\\Users\\Santiago\\Desktop\\Diplomado En Desarrollo Front - End Con React JS\\M3U2TrelloAppSantiagoRicardo\\src\\utils\\render-tasks.js"}],"generated":{"js":"\"use strict\";\n\nvar _allElements = require(\"./utils/all-elements.js\");\n\nvar _postTask = _interopRequireDefault(require(\"./api/postTask.js\"));\n\nvar _getAllTasks = _interopRequireDefault(require(\"./api/getAllTasks.js\"));\n\nvar _renderTasks = _interopRequireDefault(require(\"./utils/render-tasks.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar ALL_TASKS = []; // IIFE -> Immediately Invoked Function Expression\n\n_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n  var tasks;\n  return _regeneratorRuntime().wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _getAllTasks.default)();\n\n        case 2:\n          tasks = _context.sent;\n          ALL_TASKS.push.apply(ALL_TASKS, _toConsumableArray(tasks));\n          (0, _renderTasks.default)(ALL_TASKS);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}))();\n\n_allElements.ELEMENTS.modal.openSidebar.addEventListener('click', function () {\n  _allElements.ELEMENTS.modal.sidebar.classList.add('active');\n});\n\n_allElements.ELEMENTS.modal.botonCancelar.addEventListener('click', function () {\n  _allElements.ELEMENTS.modal.sidebar.classList.remove('active');\n});\n\n_allElements.ELEMENTS.form.form.onsubmit = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event) {\n    var _ELEMENTS$form$inputs, tarea, descripcion, responsable, fecha, newestTask, newTask, task;\n\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            event.preventDefault();\n            _ELEMENTS$form$inputs = _allElements.ELEMENTS.form.inputs, tarea = _ELEMENTS$form$inputs.tarea, descripcion = _ELEMENTS$form$inputs.descripcion, responsable = _ELEMENTS$form$inputs.responsable, fecha = _ELEMENTS$form$inputs.fecha;\n            newestTask = ALL_TASKS[ALL_TASKS.length - 1];\n            newTask = {\n              id: ++newestTask.id,\n              title: tarea.value,\n              person: responsable.value,\n              details: descripcion.value,\n              state: 'to-do',\n              deadline: Math.floor(new Date(fecha.value).getTime() / 1000),\n              created: Math.floor(new Date().getTime() / 1000)\n            };\n            _context2.next = 6;\n            return (0, _postTask.default)(newTask);\n\n          case 6:\n            task = _context2.sent;\n            ALL_TASKS.push(task);\n            (0, _renderTasks.default)(ALL_TASKS);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"src/main.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"src/main.js","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"src/main.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":0},"source":"src/main.js","original":{"line":4,"column":0}},{"generated":{"line":15,"column":47},"source":"src/main.js","original":{"line":2,"column":0}},{"generated":{"line":33,"column":0},"source":"src/main.js","original":{"line":6,"column":0}},{"generated":{"line":33,"column":4},"source":"src/main.js","original":{"line":6,"column":6},"name":"ALL_TASKS"},{"generated":{"line":33,"column":13},"source":"src/main.js","original":{"line":6,"column":15}},{"generated":{"line":33,"column":16},"source":"src/main.js","original":{"line":6,"column":18}},{"generated":{"line":33,"column":18},"source":"src/main.js","original":{"line":6,"column":0}},{"generated":{"line":33,"column":20},"source":"src/main.js","original":{"line":8,"column":0}},{"generated":{"line":35,"column":0},"source":"src/main.js","original":{"line":9,"column":0}},{"generated":{"line":35,"column":59},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":36,"column":2},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":37,"column":2},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":38,"column":4},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":39,"column":6},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":40,"column":8},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":41,"column":10},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":42,"column":10},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":42,"column":17},"source":"src/main.js","original":{"line":10,"column":22}},{"generated":{"line":42,"column":21},"source":"src/main.js","original":{"line":10,"column":22},"name":"getAllTasks"},{"generated":{"line":42,"column":41},"source":"src/main.js","original":{"line":10,"column":22}},{"generated":{"line":42,"column":44},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":44,"column":8},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":45,"column":10},"source":"src/main.js","original":{"line":10,"column":8},"name":"tasks"},{"generated":{"line":45,"column":15},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":46,"column":10},"source":"src/main.js","original":{"line":11,"column":2},"name":"ALL_TASKS"},{"generated":{"line":46,"column":19},"source":"src/main.js","original":{"line":11,"column":11}},{"generated":{"line":46,"column":20},"source":"src/main.js","original":{"line":11,"column":12},"name":"push"},{"generated":{"line":46,"column":24},"source":"src/main.js","original":{"line":11,"column":2}},{"generated":{"line":46,"column":31},"source":"src/main.js","original":{"line":11,"column":2},"name":"ALL_TASKS"},{"generated":{"line":46,"column":40},"source":"src/main.js","original":{"line":11,"column":11}},{"generated":{"line":46,"column":61},"source":"src/main.js","original":{"line":11,"column":20},"name":"tasks"},{"generated":{"line":46,"column":66},"source":"src/main.js","original":{"line":11,"column":11}},{"generated":{"line":46,"column":68},"source":"src/main.js","original":{"line":11,"column":2}},{"generated":{"line":47,"column":10},"source":"src/main.js","original":{"line":12,"column":2}},{"generated":{"line":47,"column":14},"source":"src/main.js","original":{"line":12,"column":2},"name":"renderTasks"},{"generated":{"line":47,"column":34},"source":"src/main.js","original":{"line":12,"column":2}},{"generated":{"line":47,"column":36},"source":"src/main.js","original":{"line":12,"column":14},"name":"ALL_TASKS"},{"generated":{"line":47,"column":45},"source":"src/main.js","original":{"line":12,"column":2}},{"generated":{"line":49,"column":8},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":50,"column":8},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":51,"column":10},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":52,"column":6},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":53,"column":4},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":54,"column":2},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":55,"column":0},"source":"src/main.js","original":{"line":9,"column":1}},{"generated":{"line":55,"column":1},"source":"src/main.js","original":{"line":9,"column":0}},{"generated":{"line":57,"column":0},"source":"src/main.js","original":{"line":15,"column":0},"name":"ELEMENTS"},{"generated":{"line":57,"column":21},"source":"src/main.js","original":{"line":15,"column":0}},{"generated":{"line":57,"column":22},"source":"src/main.js","original":{"line":15,"column":9},"name":"modal"},{"generated":{"line":57,"column":27},"source":"src/main.js","original":{"line":15,"column":0}},{"generated":{"line":57,"column":28},"source":"src/main.js","original":{"line":15,"column":15},"name":"openSidebar"},{"generated":{"line":57,"column":39},"source":"src/main.js","original":{"line":15,"column":0}},{"generated":{"line":57,"column":40},"source":"src/main.js","original":{"line":15,"column":27},"name":"addEventListener"},{"generated":{"line":57,"column":56},"source":"src/main.js","original":{"line":15,"column":0}},{"generated":{"line":57,"column":57},"source":"src/main.js","original":{"line":15,"column":44}},{"generated":{"line":57,"column":64},"source":"src/main.js","original":{"line":15,"column":0}},{"generated":{"line":57,"column":66},"source":"src/main.js","original":{"line":15,"column":53}},{"generated":{"line":57,"column":78},"source":"src/main.js","original":{"line":15,"column":59}},{"generated":{"line":58,"column":2},"source":"src/main.js","original":{"line":16,"column":2},"name":"ELEMENTS"},{"generated":{"line":58,"column":23},"source":"src/main.js","original":{"line":16,"column":2}},{"generated":{"line":58,"column":24},"source":"src/main.js","original":{"line":16,"column":11},"name":"modal"},{"generated":{"line":58,"column":29},"source":"src/main.js","original":{"line":16,"column":2}},{"generated":{"line":58,"column":30},"source":"src/main.js","original":{"line":16,"column":17},"name":"sidebar"},{"generated":{"line":58,"column":37},"source":"src/main.js","original":{"line":16,"column":2}},{"generated":{"line":58,"column":38},"source":"src/main.js","original":{"line":16,"column":25},"name":"classList"},{"generated":{"line":58,"column":47},"source":"src/main.js","original":{"line":16,"column":2}},{"generated":{"line":58,"column":48},"source":"src/main.js","original":{"line":16,"column":35},"name":"add"},{"generated":{"line":58,"column":51},"source":"src/main.js","original":{"line":16,"column":2}},{"generated":{"line":58,"column":52},"source":"src/main.js","original":{"line":16,"column":39}},{"generated":{"line":58,"column":60},"source":"src/main.js","original":{"line":16,"column":2}},{"generated":{"line":59,"column":0},"source":"src/main.js","original":{"line":17,"column":1}},{"generated":{"line":59,"column":1},"source":"src/main.js","original":{"line":15,"column":0}},{"generated":{"line":61,"column":0},"source":"src/main.js","original":{"line":19,"column":0},"name":"ELEMENTS"},{"generated":{"line":61,"column":21},"source":"src/main.js","original":{"line":19,"column":0}},{"generated":{"line":61,"column":22},"source":"src/main.js","original":{"line":19,"column":9},"name":"modal"},{"generated":{"line":61,"column":27},"source":"src/main.js","original":{"line":19,"column":0}},{"generated":{"line":61,"column":28},"source":"src/main.js","original":{"line":19,"column":15},"name":"botonCancelar"},{"generated":{"line":61,"column":41},"source":"src/main.js","original":{"line":19,"column":0}},{"generated":{"line":61,"column":42},"source":"src/main.js","original":{"line":19,"column":29},"name":"addEventListener"},{"generated":{"line":61,"column":58},"source":"src/main.js","original":{"line":19,"column":0}},{"generated":{"line":61,"column":59},"source":"src/main.js","original":{"line":19,"column":46}},{"generated":{"line":61,"column":66},"source":"src/main.js","original":{"line":19,"column":0}},{"generated":{"line":61,"column":68},"source":"src/main.js","original":{"line":19,"column":55}},{"generated":{"line":61,"column":80},"source":"src/main.js","original":{"line":19,"column":61}},{"generated":{"line":62,"column":2},"source":"src/main.js","original":{"line":20,"column":2},"name":"ELEMENTS"},{"generated":{"line":62,"column":23},"source":"src/main.js","original":{"line":20,"column":2}},{"generated":{"line":62,"column":24},"source":"src/main.js","original":{"line":20,"column":11},"name":"modal"},{"generated":{"line":62,"column":29},"source":"src/main.js","original":{"line":20,"column":2}},{"generated":{"line":62,"column":30},"source":"src/main.js","original":{"line":20,"column":17},"name":"sidebar"},{"generated":{"line":62,"column":37},"source":"src/main.js","original":{"line":20,"column":2}},{"generated":{"line":62,"column":38},"source":"src/main.js","original":{"line":20,"column":25},"name":"classList"},{"generated":{"line":62,"column":47},"source":"src/main.js","original":{"line":20,"column":2}},{"generated":{"line":62,"column":48},"source":"src/main.js","original":{"line":20,"column":35},"name":"remove"},{"generated":{"line":62,"column":54},"source":"src/main.js","original":{"line":20,"column":2}},{"generated":{"line":62,"column":55},"source":"src/main.js","original":{"line":20,"column":42}},{"generated":{"line":62,"column":63},"source":"src/main.js","original":{"line":20,"column":2}},{"generated":{"line":63,"column":0},"source":"src/main.js","original":{"line":21,"column":1}},{"generated":{"line":63,"column":1},"source":"src/main.js","original":{"line":19,"column":0}},{"generated":{"line":65,"column":0},"source":"src/main.js","original":{"line":23,"column":0},"name":"ELEMENTS"},{"generated":{"line":65,"column":21},"source":"src/main.js","original":{"line":23,"column":0}},{"generated":{"line":65,"column":22},"source":"src/main.js","original":{"line":23,"column":9},"name":"form"},{"generated":{"line":65,"column":26},"source":"src/main.js","original":{"line":23,"column":0}},{"generated":{"line":65,"column":27},"source":"src/main.js","original":{"line":23,"column":14},"name":"form"},{"generated":{"line":65,"column":31},"source":"src/main.js","original":{"line":23,"column":0}},{"generated":{"line":65,"column":32},"source":"src/main.js","original":{"line":23,"column":19},"name":"onsubmit"},{"generated":{"line":65,"column":40},"source":"src/main.js","original":{"line":23,"column":0}},{"generated":{"line":66,"column":2},"source":"src/main.js","original":{"line":23,"column":0}},{"generated":{"line":66,"column":73},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":66,"column":91},"source":"src/main.js","original":{"line":23,"column":37},"name":"event"},{"generated":{"line":66,"column":96},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":67,"column":4},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":69,"column":4},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":70,"column":6},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":71,"column":8},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":72,"column":10},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":73,"column":12},"source":"src/main.js","original":{"line":24,"column":2},"name":"event"},{"generated":{"line":73,"column":17},"source":"src/main.js","original":{"line":24,"column":7}},{"generated":{"line":73,"column":18},"source":"src/main.js","original":{"line":24,"column":8},"name":"preventDefault"},{"generated":{"line":73,"column":32},"source":"src/main.js","original":{"line":24,"column":2}},{"generated":{"line":74,"column":12},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":74,"column":36},"source":"src/main.js","original":{"line":25,"column":53},"name":"ELEMENTS"},{"generated":{"line":74,"column":57},"source":"src/main.js","original":{"line":25,"column":53}},{"generated":{"line":74,"column":58},"source":"src/main.js","original":{"line":25,"column":62},"name":"form"},{"generated":{"line":74,"column":62},"source":"src/main.js","original":{"line":25,"column":53}},{"generated":{"line":74,"column":63},"source":"src/main.js","original":{"line":25,"column":67},"name":"inputs"},{"generated":{"line":74,"column":69},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":74,"column":71},"source":"src/main.js","original":{"line":25,"column":10},"name":"tarea"},{"generated":{"line":74,"column":76},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":74,"column":101},"source":"src/main.js","original":{"line":25,"column":10},"name":"tarea"},{"generated":{"line":74,"column":106},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":74,"column":108},"source":"src/main.js","original":{"line":25,"column":17},"name":"descripcion"},{"generated":{"line":74,"column":119},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":74,"column":144},"source":"src/main.js","original":{"line":25,"column":17},"name":"descripcion"},{"generated":{"line":74,"column":155},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":74,"column":157},"source":"src/main.js","original":{"line":25,"column":30},"name":"responsable"},{"generated":{"line":74,"column":168},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":74,"column":193},"source":"src/main.js","original":{"line":25,"column":30},"name":"responsable"},{"generated":{"line":74,"column":204},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":74,"column":206},"source":"src/main.js","original":{"line":25,"column":43},"name":"fecha"},{"generated":{"line":74,"column":211},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":74,"column":236},"source":"src/main.js","original":{"line":25,"column":43},"name":"fecha"},{"generated":{"line":74,"column":241},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":75,"column":12},"source":"src/main.js","original":{"line":27,"column":8},"name":"newestTask"},{"generated":{"line":75,"column":22},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":75,"column":25},"source":"src/main.js","original":{"line":27,"column":21},"name":"ALL_TASKS"},{"generated":{"line":75,"column":34},"source":"src/main.js","original":{"line":27,"column":30}},{"generated":{"line":75,"column":35},"source":"src/main.js","original":{"line":27,"column":31},"name":"ALL_TASKS"},{"generated":{"line":75,"column":44},"source":"src/main.js","original":{"line":27,"column":40}},{"generated":{"line":75,"column":45},"source":"src/main.js","original":{"line":27,"column":41},"name":"length"},{"generated":{"line":75,"column":51},"source":"src/main.js","original":{"line":27,"column":31}},{"generated":{"line":75,"column":54},"source":"src/main.js","original":{"line":27,"column":50}},{"generated":{"line":75,"column":55},"source":"src/main.js","original":{"line":27,"column":30}},{"generated":{"line":75,"column":56},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":76,"column":12},"source":"src/main.js","original":{"line":29,"column":8},"name":"newTask"},{"generated":{"line":76,"column":19},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":76,"column":22},"source":"src/main.js","original":{"line":29,"column":18}},{"generated":{"line":77,"column":14},"source":"src/main.js","original":{"line":30,"column":4},"name":"id"},{"generated":{"line":77,"column":16},"source":"src/main.js","original":{"line":30,"column":6}},{"generated":{"line":77,"column":18},"source":"src/main.js","original":{"line":30,"column":8}},{"generated":{"line":77,"column":20},"source":"src/main.js","original":{"line":30,"column":10},"name":"newestTask"},{"generated":{"line":77,"column":30},"source":"src/main.js","original":{"line":30,"column":20}},{"generated":{"line":77,"column":31},"source":"src/main.js","original":{"line":30,"column":21},"name":"id"},{"generated":{"line":77,"column":33},"source":"src/main.js","original":{"line":29,"column":18}},{"generated":{"line":78,"column":14},"source":"src/main.js","original":{"line":31,"column":4},"name":"title"},{"generated":{"line":78,"column":19},"source":"src/main.js","original":{"line":31,"column":9}},{"generated":{"line":78,"column":21},"source":"src/main.js","original":{"line":31,"column":11},"name":"tarea"},{"generated":{"line":78,"column":26},"source":"src/main.js","original":{"line":31,"column":16}},{"generated":{"line":78,"column":27},"source":"src/main.js","original":{"line":31,"column":17},"name":"value"},{"generated":{"line":78,"column":32},"source":"src/main.js","original":{"line":29,"column":18}},{"generated":{"line":79,"column":14},"source":"src/main.js","original":{"line":32,"column":4},"name":"person"},{"generated":{"line":79,"column":20},"source":"src/main.js","original":{"line":32,"column":10}},{"generated":{"line":79,"column":22},"source":"src/main.js","original":{"line":32,"column":12},"name":"responsable"},{"generated":{"line":79,"column":33},"source":"src/main.js","original":{"line":32,"column":23}},{"generated":{"line":79,"column":34},"source":"src/main.js","original":{"line":32,"column":24},"name":"value"},{"generated":{"line":79,"column":39},"source":"src/main.js","original":{"line":29,"column":18}},{"generated":{"line":80,"column":14},"source":"src/main.js","original":{"line":33,"column":4},"name":"details"},{"generated":{"line":80,"column":21},"source":"src/main.js","original":{"line":33,"column":11}},{"generated":{"line":80,"column":23},"source":"src/main.js","original":{"line":33,"column":13},"name":"descripcion"},{"generated":{"line":80,"column":34},"source":"src/main.js","original":{"line":33,"column":24}},{"generated":{"line":80,"column":35},"source":"src/main.js","original":{"line":33,"column":25},"name":"value"},{"generated":{"line":80,"column":40},"source":"src/main.js","original":{"line":29,"column":18}},{"generated":{"line":81,"column":14},"source":"src/main.js","original":{"line":34,"column":4},"name":"state"},{"generated":{"line":81,"column":19},"source":"src/main.js","original":{"line":34,"column":9}},{"generated":{"line":81,"column":21},"source":"src/main.js","original":{"line":34,"column":11}},{"generated":{"line":81,"column":28},"source":"src/main.js","original":{"line":29,"column":18}},{"generated":{"line":82,"column":14},"source":"src/main.js","original":{"line":35,"column":4},"name":"deadline"},{"generated":{"line":82,"column":22},"source":"src/main.js","original":{"line":35,"column":12}},{"generated":{"line":82,"column":24},"source":"src/main.js","original":{"line":35,"column":14},"name":"Math"},{"generated":{"line":82,"column":28},"source":"src/main.js","original":{"line":35,"column":18}},{"generated":{"line":82,"column":29},"source":"src/main.js","original":{"line":35,"column":19},"name":"floor"},{"generated":{"line":82,"column":34},"source":"src/main.js","original":{"line":35,"column":14}},{"generated":{"line":82,"column":35},"source":"src/main.js","original":{"line":35,"column":25}},{"generated":{"line":82,"column":39},"source":"src/main.js","original":{"line":35,"column":29},"name":"Date"},{"generated":{"line":82,"column":43},"source":"src/main.js","original":{"line":35,"column":25}},{"generated":{"line":82,"column":44},"source":"src/main.js","original":{"line":35,"column":34},"name":"fecha"},{"generated":{"line":82,"column":49},"source":"src/main.js","original":{"line":35,"column":39}},{"generated":{"line":82,"column":50},"source":"src/main.js","original":{"line":35,"column":40},"name":"value"},{"generated":{"line":82,"column":55},"source":"src/main.js","original":{"line":35,"column":25}},{"generated":{"line":82,"column":57},"source":"src/main.js","original":{"line":35,"column":47},"name":"getTime"},{"generated":{"line":82,"column":64},"source":"src/main.js","original":{"line":35,"column":25}},{"generated":{"line":82,"column":69},"source":"src/main.js","original":{"line":35,"column":59}},{"generated":{"line":82,"column":73},"source":"src/main.js","original":{"line":35,"column":14}},{"generated":{"line":82,"column":74},"source":"src/main.js","original":{"line":29,"column":18}},{"generated":{"line":83,"column":14},"source":"src/main.js","original":{"line":36,"column":4},"name":"created"},{"generated":{"line":83,"column":21},"source":"src/main.js","original":{"line":36,"column":11}},{"generated":{"line":83,"column":23},"source":"src/main.js","original":{"line":36,"column":13},"name":"Math"},{"generated":{"line":83,"column":27},"source":"src/main.js","original":{"line":36,"column":17}},{"generated":{"line":83,"column":28},"source":"src/main.js","original":{"line":36,"column":18},"name":"floor"},{"generated":{"line":83,"column":33},"source":"src/main.js","original":{"line":36,"column":13}},{"generated":{"line":83,"column":34},"source":"src/main.js","original":{"line":36,"column":24}},{"generated":{"line":83,"column":38},"source":"src/main.js","original":{"line":36,"column":28},"name":"Date"},{"generated":{"line":83,"column":42},"source":"src/main.js","original":{"line":36,"column":24}},{"generated":{"line":83,"column":45},"source":"src/main.js","original":{"line":36,"column":35},"name":"getTime"},{"generated":{"line":83,"column":52},"source":"src/main.js","original":{"line":36,"column":24}},{"generated":{"line":83,"column":57},"source":"src/main.js","original":{"line":36,"column":47}},{"generated":{"line":83,"column":61},"source":"src/main.js","original":{"line":36,"column":13}},{"generated":{"line":84,"column":12},"source":"src/main.js","original":{"line":29,"column":18}},{"generated":{"line":84,"column":13},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":85,"column":12},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":86,"column":12},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":86,"column":19},"source":"src/main.js","original":{"line":39,"column":21}},{"generated":{"line":86,"column":23},"source":"src/main.js","original":{"line":39,"column":21},"name":"postTask"},{"generated":{"line":86,"column":40},"source":"src/main.js","original":{"line":39,"column":21}},{"generated":{"line":86,"column":42},"source":"src/main.js","original":{"line":39,"column":30},"name":"newTask"},{"generated":{"line":86,"column":49},"source":"src/main.js","original":{"line":39,"column":21}},{"generated":{"line":86,"column":50},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":88,"column":10},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":89,"column":12},"source":"src/main.js","original":{"line":39,"column":8},"name":"task"},{"generated":{"line":89,"column":16},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":90,"column":12},"source":"src/main.js","original":{"line":40,"column":2},"name":"ALL_TASKS"},{"generated":{"line":90,"column":21},"source":"src/main.js","original":{"line":40,"column":11}},{"generated":{"line":90,"column":22},"source":"src/main.js","original":{"line":40,"column":12},"name":"push"},{"generated":{"line":90,"column":26},"source":"src/main.js","original":{"line":40,"column":2}},{"generated":{"line":90,"column":27},"source":"src/main.js","original":{"line":40,"column":17},"name":"task"},{"generated":{"line":90,"column":31},"source":"src/main.js","original":{"line":40,"column":2}},{"generated":{"line":91,"column":12},"source":"src/main.js","original":{"line":41,"column":2}},{"generated":{"line":91,"column":16},"source":"src/main.js","original":{"line":41,"column":2},"name":"renderTasks"},{"generated":{"line":91,"column":36},"source":"src/main.js","original":{"line":41,"column":2}},{"generated":{"line":91,"column":38},"source":"src/main.js","original":{"line":41,"column":14},"name":"ALL_TASKS"},{"generated":{"line":91,"column":47},"source":"src/main.js","original":{"line":41,"column":2}},{"generated":{"line":93,"column":10},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":94,"column":10},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":95,"column":12},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":96,"column":8},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":97,"column":6},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":98,"column":4},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":99,"column":2},"source":"src/main.js","original":{"line":23,"column":30}},{"generated":{"line":99,"column":3},"source":"src/main.js","original":{"line":23,"column":0}},{"generated":{"line":101,"column":2},"source":"src/main.js","original":{"line":23,"column":0}},{"generated":{"line":102,"column":4},"source":"src/main.js","original":{"line":23,"column":0}},{"generated":{"line":103,"column":2},"source":"src/main.js","original":{"line":23,"column":0}},{"generated":{"line":104,"column":0},"source":"src/main.js","original":{"line":23,"column":0}}],"sources":{"src/main.js":"import { ELEMENTS } from './utils/all-elements.js';\r\nimport postTask from './api/postTask.js';\r\nimport getAllTasks from './api/getAllTasks.js';\r\nimport renderTasks from './utils/render-tasks.js';\r\n\r\nconst ALL_TASKS = [];\r\n\r\n// IIFE -> Immediately Invoked Function Expression\r\n(async function () {\r\n  const tasks = await getAllTasks();\r\n  ALL_TASKS.push(...tasks);\r\n  renderTasks(ALL_TASKS);\r\n})();\r\n\r\nELEMENTS.modal.openSidebar.addEventListener('click', () => {\r\n  ELEMENTS.modal.sidebar.classList.add('active');\r\n});\r\n\r\nELEMENTS.modal.botonCancelar.addEventListener('click', () => {\r\n  ELEMENTS.modal.sidebar.classList.remove('active');\r\n});\r\n\r\nELEMENTS.form.form.onsubmit = async (event) => {\r\n  event.preventDefault();\r\n  const { tarea, descripcion, responsable, fecha } = ELEMENTS.form.inputs;\r\n\r\n  const newestTask = ALL_TASKS[ALL_TASKS.length - 1];\r\n\r\n  const newTask = {\r\n    id: ++newestTask.id,\r\n    title: tarea.value,\r\n    person: responsable.value,\r\n    details: descripcion.value,\r\n    state: 'to-do',\r\n    deadline: Math.floor(new Date(fecha.value).getTime() / 1000),\r\n    created: Math.floor(new Date().getTime() / 1000),\r\n  };\r\n\r\n  const task = await postTask(newTask);\r\n  ALL_TASKS.push(task);\r\n  renderTasks(ALL_TASKS);\r\n};\r\n"},"lineCount":null}},"error":null,"hash":"fc357e2ec4b605b34be7cb2afd6a26ca","cacheData":{"env":{}}}